#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API Bitrix24 –±–µ–∑ Excel
–¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import configparser
import time
from datetime import datetime

def main():
    print("=" * 50)
    print("üß™ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ API BITRIX24")
    print(f"‚è∞ {datetime.now().strftime('%Y.%m.%d %H:%M:%S')}")
    print("=" * 50)
    
    try:
        # –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
        config = configparser.ConfigParser()
        config.read('config.ini', encoding='utf-8')
        webhook_url = config.get('BitrixAPI', 'webhookurl')
        
        print(f"üîó Webhook URL: {webhook_url}")
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å Smart Invoices
        print("\nüìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ Smart Invoices...")
        params = {
            'entityTypeId': 31,
            'start': 0,
            'filter': {'!stageId': 'DT31_1:D'},
            'select': ['id', 'accountNumber', 'opportunity']
        }
        
        resp = requests.post(f"{webhook_url}crm.item.list", json=params, timeout=10)
        print(f"   üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {resp.status_code}")
        
        if resp.status_code == 200:
            data = resp.json()
            items = data.get('result', {}).get('items', [])
            print(f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(items)}")
            
            if items:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å
                first = items[0]
                print(f"   üìä –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å:")
                print(f"      ID: {first.get('id')}")
                print(f"      –ù–æ–º–µ—Ä: {first.get('accountNumber')}")
                print(f"      –°—É–º–º–∞: {first.get('opportunity')}")
                
                # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å—á–µ—Ç–∞
                acc_num = first.get('accountNumber', '')
                if acc_num:
                    print(f"\nüîç –¢–µ—Å—Ç 2: –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è —Å—á–µ—Ç–∞ {acc_num}")
                    
                    # –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Å—á–µ—Ç–∞
                    search_resp = requests.get(f"{webhook_url}crm.item.list", params={
                        'filter[accountNumber]': acc_num,
                        'entityTypeId': 31
                    }, timeout=10)
                    
                    print(f"   üì° –ü–æ–∏—Å–∫ —Å—á–µ—Ç–∞: {search_resp.status_code}")
                    
                    if search_resp.status_code == 200:
                        search_data = search_resp.json()
                        search_items = search_data.get('result', {}).get('items', [])
                        
                        if search_items:
                            inv_id = search_items[0].get('id')
                            print(f"   ‚úÖ –°—á–µ—Ç –Ω–∞–π–¥–µ–Ω, ID: {inv_id}")
                            
                            # –ü–æ–∏—Å–∫ —Å–≤—è–∑–µ–π —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
                            time.sleep(0.5)
                            link_resp = requests.get(f"{webhook_url}crm.requisite.link.list", params={
                                'filter[ENTITY_TYPE_ID]': 31,
                                'filter[ENTITY_ID]': inv_id
                            }, timeout=10)
                            
                            print(f"   üì° –ü–æ–∏—Å–∫ —Å–≤—è–∑–µ–π: {link_resp.status_code}")
                            
                            if link_resp.status_code == 200:
                                link_data = link_resp.json()
                                link_items = link_data.get('result', [])
                                print(f"   üìã –ù–∞–π–¥–µ–Ω–æ —Å–≤—è–∑–µ–π: {len(link_items)}")
                                
                                if link_items:
                                    req_id = link_items[0].get('REQUISITE_ID')
                                    print(f"   ‚úÖ ID —Ä–µ–∫–≤–∏–∑–∏—Ç–∞: {req_id}")
                                    
                                    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞
                                    time.sleep(0.5)
                                    req_resp = requests.post(f"{webhook_url}crm.requisite.get", 
                                                           json={"id": str(req_id)}, timeout=10)
                                    
                                    print(f"   üì° –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞: {req_resp.status_code}")
                                    
                                    if req_resp.status_code == 200:
                                        req_data = req_resp.json()
                                        if req_data.get('result'):
                                            fields = req_data['result']
                                            print(f"   ‚úÖ –†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:")
                                            print(f"      –ò–ù–ù: {fields.get('RQ_INN', '–ù–µ—Ç')}")
                                            print(f"      –ö–æ–º–ø–∞–Ω–∏—è: {fields.get('RQ_COMPANY_NAME', '–ù–µ—Ç')}")
                                            print(f"      –ò–º—è: {fields.get('RQ_NAME', '–ù–µ—Ç')}")
                                        else:
                                            print(f"   ‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç–∞")
                                    else:
                                        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–∞: {req_resp.text}")
                                else:
                                    print(f"   ‚ö†Ô∏è –ù–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤")
                            else:
                                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–≤—è–∑–µ–π: {link_resp.text}")
                        else:
                            print(f"   ‚ùå –°—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø–æ–∏—Å–∫–µ")
                    else:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å—á–µ—Ç–∞: {search_resp.text}")
                
                print(f"\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
                print(f"‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
                print(f"‚úÖ Smart Invoices –ø–æ–ª—É—á–∞—é—Ç—Å—è ({len(items)} –∑–∞–ø–∏—Å–µ–π)")
                if 'req_id' in locals():
                    print(f"‚úÖ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã")
                    print(f"‚úÖ –í—Å–µ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    print(f"\nüìù –ì–û–¢–û–í –ö –°–û–ó–î–ê–ù–ò–Æ –ü–û–õ–ù–û–ì–û –û–¢–ß–ï–¢–ê")
                else:
                    print(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏")
                    
            else:
                print(f"   ‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {resp.text}")
            
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    print(f"\n‚è∞ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {datetime.now().strftime('%Y.%m.%d %H:%M:%S')}")
    input("‚è∏Ô∏è –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main() 