#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–µ—Ä webhook URL –¥–ª—è Bitrix24.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.
"""

import requests
import configparser
import json
from datetime import datetime


def test_webhook():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç webhook URL –∏–∑ config.ini"""
    
    print("üîç –¢–µ—Å—Ç–µ—Ä Bitrix24 Webhook")
    print("=" * 40)
    
    # –ß–∏—Ç–∞–µ–º config.ini
    try:
        config = configparser.ConfigParser()
        config.read('config.ini', encoding='utf-8')
        webhook_url = config.get('BitrixAPI', 'webhookurl')
        print(f"üì° Webhook URL: {webhook_url}")
        print()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è config.ini: {e}")
        return False
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –º–µ—Ç–æ–¥–æ–≤
    print("üß™ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–≤...")
    try:
        response = requests.get(f"{webhook_url}profile", timeout=10)
        print(f"   üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data.get('result', {}).get('NAME', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   üè¢ –ü–æ—Ä—Ç–∞–ª: {data.get('result', {}).get('SERVER_NAME', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        elif response.status_code == 401:
            print("   ‚ùå –û—à–∏–±–∫–∞ 401: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø")
            print("   üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ webhook URL –≤ Bitrix24")
            return False
        else:
            print(f"   ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            return False
            
    except requests.exceptions.Timeout:
        print("   ‚ùå –¢–∞–π–º-–∞—É—Ç: –ë–∏—Ç—Ä–∏–∫—Å24 –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        return False
    except requests.exceptions.ConnectionError:
        print("   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    print()
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ CRM –ø—Ä–∞–≤
    print("üß™ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ CRM...")
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ CRM
        response = requests.post(
            f"{webhook_url}crm.item.list",
            json={
                'entityTypeId': 31,  # Smart Invoices
                'start': 0,
                'select': ['id', 'accountNumber']
            },
            timeout=10
        )
        
        print(f"   üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            items = data.get('result', {}).get('items', [])
            print(f"   ‚úÖ –î–æ—Å—Ç—É–ø –∫ CRM –µ—Å—Ç—å!")
            print(f"   üìã –ù–∞–π–¥–µ–Ω–æ Smart Invoices: {len(items)}")
            
            if len(items) > 0:
                print(f"   üìÑ –ü—Ä–∏–º–µ—Ä —Å—á—ë—Ç–∞: {items[0].get('accountNumber', '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞')}")
            else:
                print("   ‚ö†Ô∏è  Smart Invoices –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –∏—Ö –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç)")
                
        elif response.status_code == 401:
            print("   ‚ùå –û—à–∏–±–∫–∞ 401: –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ CRM")
            return False
        else:
            print(f"   ‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: {response.status_code}")
            data = response.json()
            error_msg = data.get('error_description', data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'))
            print(f"   üìÑ –û—à–∏–±–∫–∞: {error_msg}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    print()
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    return True


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = test_webhook()
    
    print("\n" + "=" * 40)
    if success:
        print("üéâ Webhook URL —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        print("   –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å run_report.py")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å webhook URL")
        print("\nüîß –ö–ê–ö –ò–°–ü–†–ê–í–ò–¢–¨:")
        print("1. –í–æ–π–¥–∏—Ç–µ –≤ Bitrix24: softway.bitrix24.ru")
        print("2. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Üí –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º ‚Üí –î—Ä—É–≥–æ–µ ‚Üí –í—Ö–æ–¥—è—â–∏–π –≤–µ–±—Ö—É–∫")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ webhook –∞–∫—Ç–∏–≤–µ–Ω")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ CRM")
        print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –≤ config.ini")
    
    print("\n‚è∏Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è...")
    input()


if __name__ == "__main__":
    main() 